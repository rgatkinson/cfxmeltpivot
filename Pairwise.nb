Notebook[{

Cell[CellGroupData[{
Cell["Pairwise: Data Analysis", \
"Title",ExpressionUUID->"39796d72-87ca-4320-97ff-a98d4bd016ce"],

Cell["\<\
Robert Atkinson
09 March 2020\
\>", "Author",ExpressionUUID->"05aea015-05f3-4e99-899d-20a8cd5792a1"],

Cell["We analyze data from various experiments", \
"Text",ExpressionUUID->"56cc4ba9-b77c-4512-b3b4-73f00a3c0eee"],

Cell[CellGroupData[{

Cell["Basics", \
"Section",ExpressionUUID->"752773aa-79a8-4543-97a4-9a28a9955492"],

Cell["Some utilities we\[CloseCurlyQuote]ll need", \
"Text",ExpressionUUID->"b3145be0-8eaf-4177-bf05-9735776e362f"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"FrontEndExecute", "[", 
    RowBox[{"{", 
     RowBox[{"FrontEndToken", "[", 
      RowBox[{
       RowBox[{"InputNotebook", "[", "]"}], ",", "\"\<SelectAll\>\""}], "]"}],
      "}"}], "]"}], ";", "\n", 
   RowBox[{"FrontEndExecute", "[", 
    RowBox[{"{", 
     RowBox[{"FrontEndToken", "[", 
      RowBox[{
       RowBox[{"InputNotebook", "[", "]"}], ",", 
       "\"\<SelectionOpenAllGroups\>\""}], "]"}], "}"}], "]"}], ";"}], 
  "*)"}]], "Input",ExpressionUUID->"4308b520-54ec-4531-b566-b60a693897e8"],

Cell[BoxData[{
 RowBox[{"On", "[", "Assert", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "assert", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"assert", "[", "expr_", "]"}], " ", ":=", " ", 
  RowBox[{"assert", "[", 
   RowBox[{"expr", ",", " ", "\"\<assertion failed\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"assert", "[", 
   RowBox[{"expr_", ",", " ", "msg_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"value", "=", 
      RowBox[{"Evaluate", "[", "expr", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"BooleanQ", "[", "value", "]"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Assert", "[", 
       RowBox[{"value", ",", " ", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"msg", ",", " ", "\"\<: \>\"", ",", " ", 
           RowBox[{"HoldForm", "[", "expr", "]"}]}], "}"}], "]"}]}], "]"}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{"Assert", "[", 
       RowBox[{"value", ",", " ", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"msg", ",", " ", "\"\<: \>\"", ",", " ", 
           RowBox[{"HoldForm", "[", "expr", "]"}]}], "}"}], "]"}]}], "]"}]}], 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"to", " ", 
       RowBox[{"do", ":", " ", 
        RowBox[{"improve", " ", "message"}]}]}], " ", "*)"}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"assert", ",", " ", "HoldAll"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"assert", "[", "False", "]"}], "\[IndentingNewLine]", 
 RowBox[{"assert", "[", "3", 
  "]"}]}], "Input",ExpressionUUID->"5325dfb4-04b1-494c-bcbd-e2677b467f94"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"printCell", "[", "cell_", "]"}], " ", ":=", " ", 
  RowBox[{"CellPrint", "[", 
   RowBox[{"ExpressionCell", "[", 
    RowBox[{"cell", ",", " ", "\"\<Output\>\""}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cellPrint", "[", "cell_", "]"}], " ", ":=", " ", 
  RowBox[{"CellPrint", "[", 
   RowBox[{"ExpressionCell", "[", 
    RowBox[{"cell", ",", " ", "\"\<Output\>\""}], "]"}], 
   "]"}]}]}], "Input",ExpressionUUID->"37bb6aae-3724-4681-b762-434c36589e57"],

Cell[BoxData[
 RowBox[{
  RowBox[{"log", "[", "msg_", "]"}], " ", ":=", " ", 
  RowBox[{"CellPrint", "[", 
   RowBox[{"TextCell", "[", 
    RowBox[{"msg", ",", " ", "\"\<Text\>\""}], "]"}], 
   "]"}]}]], "Input",ExpressionUUID->"e7981d16-a332-4bc6-abdf-3a48fc8b52ff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"test", "[", "expr_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "evald", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"evald", " ", "=", " ", 
      RowBox[{"Evaluate", "[", "expr", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"printCell", "[", 
      RowBox[{
       RowBox[{"HoldForm", "[", "expr", "]"}], " ", "\[Rule]", " ", "evald"}],
       "]"}], ";", "\[IndentingNewLine]", "evald"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test2", "[", "expr_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "evald", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"printCell", "[", 
      RowBox[{
       RowBox[{"HoldForm", "[", "expr", "]"}], " ", "\[Rule]", " ", 
       "\"\<evaluating...\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"evald", " ", "=", " ", 
      RowBox[{"Evaluate", "[", "expr", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"printCell", "[", 
      RowBox[{"\"\<...\>\"", " ", "\[Rule]", " ", "evald"}], "]"}], ";", 
     "\[IndentingNewLine]", "evald"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"test", ",", " ", "HoldAll"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"test2", ",", " ", "HoldAll"}], 
  "]"}]}], "Input",ExpressionUUID->"5aa89327-f38a-4c75-8bc4-5f11f8896fc6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"complement", "[", "angle_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"\[Pi]", "/", "2"}], " ", "-", " ", 
   "angle"}]}]], \
"Input",ExpressionUUID->"78d80425-9321-49ab-b281-593a15d6063e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "hasImaginary", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hasImaginary", "[", "expr_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "result", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"result", " ", "=", " ", 
       RowBox[{"Reap", "[", 
        RowBox[{"Scan", "[", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"ee", ",", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ee", " ", "\[NotEqual]", " ", 
               RowBox[{"Conjugate", "[", "ee", "]"}]}], ",", " ", 
              RowBox[{"Sow", "[", "True", "]"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", "expr", "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "Infinity"}], "}"}]}], "]"}], 
        "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"result", " ", "=", " ", 
      RowBox[{"Scan", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"ee", ",", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ee", " ", "\[NotEqual]", " ", 
             RowBox[{"Conjugate", "[", "ee", "]"}]}], ",", " ", 
            RowBox[{"Return", "[", "True", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", "expr", "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", " ", "Infinity"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Length", " ", "@", " ", 
        RowBox[{"result", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], " ", ">", " ", "0"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"result", " ", "===", " ", "True"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"hasImaginary", ",", " ", "HoldAll"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test", " ", "@", " ", 
   RowBox[{"hasImaginary", "[", 
    RowBox[{"1", " ", "+", " ", 
     RowBox[{"2", "I"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test", " ", "@", " ", 
   RowBox[{"hasImaginary", "[", 
    RowBox[{"30", "!"}], "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"440d00c8-54b5-4b08-bfe8-ae5feb69d532"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"toDeg", "[", "rad_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"rad", " ", "/", " ", "Pi"}], " ", "*", " ", 
   "180"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toRadian", "[", "deg_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"deg", " ", "/", " ", "180"}], " ", "*", " ", 
   "Pi"}]}]}], "Input",ExpressionUUID->"2bbc42e7-5161-4850-a96b-3fb814745a8d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"variables", ",", " ", "unboundQ"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"unboundQ", "[", "x_Symbol", "]"}], " ", ":=", " ", "True"}], "\n", 
 RowBox[{
  RowBox[{"unboundQ", "[", "_", "]"}], " ", ":=", " ", "False"}], "\n", 
 RowBox[{
  RowBox[{"unboundQ", "[", "E", "]"}], " ", ":=", " ", "False"}], "\n", 
 RowBox[{
  RowBox[{"unboundQ", "[", "I", "]"}], " ", ":=", " ", "False"}], "\n", 
 RowBox[{
  RowBox[{"unboundQ", "[", "Pi", "]"}], " ", ":=", " ", "False"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unboundQ", "[", "\[Pi]", "]"}], " ", ":=", " ", "False"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"variables", "[", "expr_", "]"}], " ", ":=", " ", 
  RowBox[{"variables", "[", 
   RowBox[{"expr", ",", " ", 
    RowBox[{"{", "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"variables", "[", 
     RowBox[{"expr_", ",", " ", "except_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"result", ",", " ", "reaped"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"result", ",", " ", "reaped"}], "}"}], " ", "=", 
        RowBox[{"Reap", "[", 
         RowBox[{"Scan", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"unboundQ", "[", "#", "]"}], ",", 
               RowBox[{"Sow", "[", "#", "]"}]}], "]"}], ")"}], "&"}], ",", 
           "expr", ",", "Infinity"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "reaped", "]"}], " ", "==", " ", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "}"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"reaped", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "//", "Union"}], ",", "except"}],
           "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test", " ", "@", " ", 
   RowBox[{"variables", "[", 
    RowBox[{"e", " ", "\[Equal]", " ", 
     RowBox[{"m", " ", 
      RowBox[{"c", "^", "2"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test", " ", "@", " ", 
   RowBox[{"variables", "[", 
    RowBox[{"{", 
     RowBox[{"C", "[", "1", "]"}], "}"}], "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"8fd2fa68-86de-4381-bd21-52f2d089b894"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "genericize", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genericize", "[", "expr_", "]"}], " ", ":=", " ", 
  RowBox[{"genericize", "[", 
   RowBox[{"expr", ",", " ", "NumberQ", ",", " ", 
    RowBox[{"{", "}"}]}], " ", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genericize", "[", 
   RowBox[{"expr_", ",", " ", "test_"}], "]"}], " ", ":=", " ", 
  RowBox[{"genericize", "[", 
   RowBox[{"expr", ",", " ", "test", ",", " ", 
    RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"genericize", "[", 
     RowBox[{"expr_", ",", " ", "test_", ",", " ", "except_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "result", ",", " ", "reaped", ",", " ", "numbers", ",", " ", "count", 
        ",", " ", "neg", ",", " ", "pos", ",", " ", "zero", ",", " ", 
        "constants", ",", " ", "constraints", ",", " ", "rules"}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"result", ",", " ", "reaped"}], "}"}], " ", "=", 
        RowBox[{"Reap", "[", 
         RowBox[{"Scan", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"test", "[", "#", "]"}], ",", 
               RowBox[{"Sow", "[", "#", "]"}]}], "]"}], ")"}], "&"}], ",", 
           "expr", ",", "Infinity"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "reaped", "]"}], " ", ">", " ", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"numbers", " ", "=", " ", 
           RowBox[{
            RowBox[{"reaped", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "//", "Union"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"todo", ":", " ", 
            RowBox[{
             RowBox[{
             "should", " ", "we", " ", "merge", " ", "duplicates", " ", 
              "like", " ", 
              RowBox[{"this", "?", " ", "It"}], " ", "does", " ", "make", " ",
               "the", " ", "logic", " ", "below", " ", "somewhat", " ", 
              "easier"}], " ", "..."}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"numbers", " ", "=", " ", 
           RowBox[{"Complement", "[", 
            RowBox[{"numbers", ",", "except"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"numbers", " ", "=", " ", 
           RowBox[{"Sort", "[", "numbers", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"count", " ", "=", " ", 
           RowBox[{"Length", "[", "numbers", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"constants", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"C", "[", "#", "]"}], "&"}], " ", "/@", " ", 
            RowBox[{"Range", "[", "count", "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"count", " ", ">", " ", "1"}], ",", "\[IndentingNewLine]", 
            RowBox[{"constraints", " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"constants", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], "<", " ", 
                RowBox[{"constants", "[", 
                 RowBox[{"[", 
                  RowBox[{"#", "+", "1"}], "]"}], "]"}]}], "&"}], " ", "/@", 
              " ", 
              RowBox[{"Range", "[", 
               RowBox[{"count", "-", "1"}], "]"}]}]}], "\[IndentingNewLine]", 
            ",", "\[IndentingNewLine]", 
            RowBox[{"constraints", "=", " ", 
             RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pos", " ", "=", " ", 
           RowBox[{"Select", "[", 
            RowBox[{"numbers", ",", " ", 
             RowBox[{
              RowBox[{"#", " ", ">", " ", "0"}], "&"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"neg", "  ", "=", " ", 
           RowBox[{"Select", "[", 
            RowBox[{"numbers", ",", " ", 
             RowBox[{
              RowBox[{"#", " ", "<", " ", "0"}], " ", "&"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"zero", " ", "=", " ", 
           RowBox[{"Select", "[", 
            RowBox[{"numbers", ",", " ", 
             RowBox[{
              RowBox[{"#", " ", "\[Equal]", " ", "0"}], "&"}]}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "pos", "]"}], " ", ">", " ", "0"}], ",", 
            " ", 
            RowBox[{"constraints", " ", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"constraints", ",", " ", 
               RowBox[{
                RowBox[{"constants", "[", 
                 RowBox[{"[", 
                  RowBox[{"count", " ", "-", " ", 
                   RowBox[{"Length", "[", "pos", "]"}], "+", "1"}], "]"}], 
                 "]"}], " ", ">", " ", "0"}]}], "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "neg", "]"}], " ", ">", " ", "0"}], ",", 
            " ", 
            RowBox[{"constraints", " ", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"constraints", ",", " ", 
               RowBox[{
                RowBox[{"constants", "[", 
                 RowBox[{"[", 
                  RowBox[{"Length", "[", "neg", "]"}], "]"}], "]"}], " ", "<",
                 " ", "0"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "zero", "]"}], " ", ">", " ", "0"}], ",", 
            " ", 
            RowBox[{"constraints", " ", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"constraints", ",", " ", 
               RowBox[{
                RowBox[{"constants", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"Length", "[", "neg", "]"}], "+", "1"}], "]"}], 
                 "]"}], " ", "==", " ", "0"}]}], "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"constraints", " ", "=", " ", 
           RowBox[{"And", " ", "@@", " ", "constraints"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"rules", " ", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"numbers", "[", 
                RowBox[{"[", "#", "]"}], "]"}], " ", "\[Rule]", " ", 
               RowBox[{"constants", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], ")"}], "&"}], "/@", " ", 
            RowBox[{"Range", "[", "count", "]"}]}]}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"expr", " ", "/.", " ", "rules"}], ",", " ", 
         RowBox[{"Reverse", "[", 
          RowBox[{"rules", ",", " ", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", " ", "constraints"}], 
        "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test", " ", "@", " ", 
   RowBox[{"genericize", "[", 
    RowBox[{
     RowBox[{"cone", "[", 
      RowBox[{"h", ",", "2"}], "]"}], " ", "+", " ", 
     RowBox[{"fred", "[", 
      RowBox[{
      "1.2", ",", " ", "3.14159", ",", " ", "1.2", ",", " ", "seven", ",", 
       " ", 
       RowBox[{"-", "2"}], ",", " ", 
       RowBox[{"-", "3"}], ",", " ", "0"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"2785b03d-5985-4032-b823-71703b18af08"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "enumerate", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"enumerate", "[", "iterable_", "]"}], " ", ":=", " ", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#1", ",", " ", "#2"}], "}"}], "&"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "iterable", "]"}], "]"}], ",", " ", 
      "iterable"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"enumerate", "[", 
    RowBox[{"func_", ",", "iterable_"}], "]"}], " ", ":=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"func", "[", 
       RowBox[{"#1", ",", " ", "#2"}], "]"}], "&"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "iterable", "]"}], "]"}], ",", " ", 
       "iterable"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test", " ", "@", " ", 
   RowBox[{"enumerate", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "value"}], "}"}], ",", " ", 
      RowBox[{"value", " ", "+", " ", "i"}]}], "]"}], "@@", "#"}], "&"}], " ",
   "/@", " ", 
  RowBox[{"enumerate", "[", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], 
   "]"}]}]}], "Input",ExpressionUUID->"8ec68a9c-2f7a-4b02-a56f-dc20decd0fec"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "pairUp", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pairUp", "[", 
   RowBox[{"a_", ",", " ", "b_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pairUp", "[", 
   RowBox[{"a_", ",", " ", "b_", ",", " ", "c_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", " ", "c"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pairUp", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", " ", "3"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"do", ",", " ", "re", ",", " ", "mi"}], "}"}]}], 
  "]"}]}], "Input",ExpressionUUID->"f5d937b1-633c-462f-b80a-4b944b3250af"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "qReduce", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qReduce", "[", 
   RowBox[{"expr_", ",", " ", "vars_", ",", " ", 
    RowBox[{"dom_", " ", ":", " ", "Reals"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Quiet", "[", 
   RowBox[{
    RowBox[{"Reduce", "[", 
     RowBox[{"expr", ",", " ", "vars", ",", " ", "dom"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"Reduce", "::", "ratnz"}], "}"}]}], 
   "]"}]}]}], "Input",ExpressionUUID->"ae93f216-c13a-4fa8-8c55-51d96176c90a"],

Cell["ToString is entirely unreasonable about newlines. So we fix.", \
"Text",ExpressionUUID->"01eaa123-f89c-4e73-a01b-9b6b353bb418"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "toString", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toString", "[", "expr_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "result", ",", " ", "reapedStrings", ",", " ", "token", ",", " ", 
      "rules", ",", " ", "reverseRules", ",", " ", "clean"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"result", ",", " ", "reapedStrings"}], "}"}], " ", "=", 
      RowBox[{"Reap", "[", 
       RowBox[{"Scan", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"StringQ", "[", "#", "]"}], ",", 
             RowBox[{"Sow", "[", "#", "]"}]}], "]"}], ")"}], "&"}], ",", 
         "expr", ",", "Infinity"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"token", " ", "=", 
      RowBox[{"FromCharacterCode", "[", "1", "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "something", " ", "not", " ", "in", " ", "any", " ", "actual", " ", 
       "string"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "reapedStrings", "]"}], " ", ">", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"rules", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"#", " ", "\[Rule]", " ", 
            RowBox[{"StringReplace", "[", 
             RowBox[{"#", ",", " ", 
              RowBox[{"{", 
               RowBox[{"\"\<\\n\>\"", " ", "\[Rule]", " ", "token"}], "}"}]}],
              "]"}]}], " ", "&"}], "/@", " ", 
          RowBox[{"reapedStrings", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"clean", " ", "=", " ", 
         RowBox[{"expr", " ", "/.", " ", "rules"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"result", " ", "=", " ", 
         RowBox[{"ToString", "[", "clean", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"result", " ", "=", " ", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"result", ",", " ", 
           RowBox[{"{", 
            RowBox[{"token", " ", "\[Rule]", " ", "\"\<\\n\>\""}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "result"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"ToString", "[", "expr", "]"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toString", "[", 
   RowBox[{"StringForm", "[", 
    RowBox[{"\"\<fre\nd ``\>\"", ",", " ", "\"\<barney\>\""}], "]"}], "]"}], 
  " ", "//", " ", "FullForm"}], "\[IndentingNewLine]", 
 RowBox[{"toString", "[", "3", 
  "]"}]}], "Input",ExpressionUUID->"fa4ede11-3c6d-455f-abf3-95b6141118d6"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "formatString", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"formatString", "[", 
   RowBox[{"str_", ",", " ", "values__"}], "]"}], " ", ":=", " ", 
  RowBox[{"toString", " ", "@", " ", 
   RowBox[{"StringForm", "[", 
    RowBox[{"str", " ", ",", " ", 
     RowBox[{"Sequence", " ", "@@", " ", 
      RowBox[{"{", "values", "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"formatString", "[", 
  RowBox[{"\"\<`` ==\n ``\>\"", ",", " ", "a", ",", " ", "b"}], 
  "]"}]}], "Input",ExpressionUUID->"f78fed21-bedf-4a41-bae1-4273afcf7913"]
}, Closed]],

Cell[CellGroupData[{

Cell["Database", \
"Section",ExpressionUUID->"357464a5-45ea-48a2-a12a-751cf054f7cf"],

Cell[CellGroupData[{

Cell["Open the Database", \
"Subsection",ExpressionUUID->"4547b9a4-8df7-490e-800b-4a7aa3844b6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"<<", "DatabaseLink`DatabaseExamples`"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"DatabaseExamplesBuild", "[", "]"}]}], "\[IndentingNewLine]", 
   "*)"}], 
  RowBox[{"(*", 
   RowBox[{"JavaClassPath", "[", "]"}], 
   "*)"}]}]], "Input",ExpressionUUID->"302e56cc-aa82-4b28-b4ea-a0424818b568"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "databaseDirectory", " ", "=", " ", 
   "\"\<C:\\\\Users\\\\bob\\\\Dropbox\\\\Grad School\\\\Lutz \
Lab\\\\Data\\\\Pairwise\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"databasePath", " ", "=", " ", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{"databaseDirectory", ",", " ", "\"\<Pairwise.accdb\>\""}], "}"}], 
   "]"}]}]}], "Input",ExpressionUUID->"6088f7bc-e275-418e-b0e6-c9a046de71a4"],

Cell["\<\
https://www.easysoft.com/blog/wolfram-mathematica.html
https://www.easysoft.com/products/data_access/jdbc-access-gateway/getting-\
started.html
https://docs.microsoft.com/en-us/office/troubleshoot/access/cannot-use-odbc-\
or-oledb\
\>", "Text",ExpressionUUID->"6c234aaf-66a1-4576-b74e-f6173b6434cf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<JLink`\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<DatabaseLink`\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "AddToClassPath", "[", 
     "\"\<C:\\\\Program Files\\\\Easysoft Limited\\\\Easysoft JDBC-Access \
Gateway\\\\Libs\\\\esmdb.jar\>\"", "]"}], ";"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"JavaClassPath", "[", "]"}], 
   "*)"}]}]}], "Input",ExpressionUUID->"ffd9e70f-ba90-4dae-8b57-91c56d14f7eb"],

Cell[BoxData[{
 RowBox[{"CloseSQLConnection", "[", "database", "]"}], "\[IndentingNewLine]", 
 RowBox[{"database", " ", "=", " ", 
  RowBox[{"OpenSQLConnection", "[", 
   RowBox[{
    RowBox[{"JDBC", "[", 
     RowBox[{"\"\<easysoft.sql.esMdbDriver\>\"", ",", 
      RowBox[{
      "\"\<jdbc:easysoft:mdb?DBQ=\>\"", " ", "<>", " ", "databasePath"}]}], 
     "]"}], ",", " ", 
    RowBox[{"\"\<ReadOnly\>\"", " ", "\[Rule]", " ", "True"}]}], 
   "]"}]}]}], "Input",ExpressionUUID->"f1b950b2-748a-42df-8adc-a3aa845f9834"],

Cell[CellGroupData[{

Cell["A Couple of Examples", \
"Subsubsection",ExpressionUUID->"cdf52dda-9f66-4a1c-9040-a32d40c7ef9f"],

Cell[BoxData[
 RowBox[{"SQLExecute", "[", 
  RowBox[{"database", ",", "\"\<select * from BadWells\>\"", ",", " ", 
   RowBox[{"\"\<ShowColumnHeadings\>\"", " ", "\[Rule]", " ", "True"}]}], 
  "]"}]], "Input",ExpressionUUID->"d9a54f38-f1fa-45dd-907b-9ff96efcb80c"],

Cell[BoxData[
 RowBox[{"SQLExecute", "[", 
  RowBox[{"database", ",", "\"\<Select * from BadWells Where [Row] = 8\>\""}],
   "]"}]], "Input",ExpressionUUID->"01a02530-3ff7-4adb-a2eb-a777427eecee"],

Cell[BoxData[
 RowBox[{"SQLExecute", "[", 
  RowBox[{
  "database", ",", 
   "\"\<Select * from BadWells Where [Experiment] = 'E20030501'\>\""}], 
  "]"}]], "Input",ExpressionUUID->"d4c33b5e-ed55-495c-904f-868aa8a3d361"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Experiments", \
"Section",ExpressionUUID->"774ea773-ed5e-41bb-9f5c-c46a9ad6e120"],

Cell[CellGroupData[{

Cell["Get Experimental Data", \
"Subsection",ExpressionUUID->"71d1f0cd-217d-4511-8a1c-ccd45ef4b43e"],

Cell["Convert the results of a SQLExecute into a dataset.", \
"Text",ExpressionUUID->"70d06b60-c127-43a1-be57-53c471079e93"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"makeDataset", ",", " ", "unDataset"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeDataset", "[", "sqlResult_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"headings", ",", " ", "body"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"headings", " ", "=", " ", 
      RowBox[{"sqlResult", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"body", " ", "=", " ", 
      RowBox[{"sqlResult", "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Dataset", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{"row", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", " ", "@@", " ", "#"}], "&"}], " ", "/@", " ", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"headings", ",", " ", "row"}], "}"}], "]"}]}], " ", "//",
           " ", "Association"}]}], "]"}], "/@", " ", "body"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"unDataset", "[", "dataset_Dataset", "]"}], "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"Dimensions", "[", "dataset", "]"}], "]"}], "\[Equal]", "2"}]}], 
  " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Values", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
   RowBox[{"Normal", "[", "dataset", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"unDataset", "[", "dataset_Dataset", "]"}], "/;", " ", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"Dimensions", "[", "dataset", "]"}], "]"}], "\[Equal]", "1"}]}], 
  " ", ":=", " ", 
  RowBox[{"Normal", "[", "dataset", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"unDataset", "[", "other_", "]"}], " ", ":=", " ", 
  "other"}]}], "Input",ExpressionUUID->"36e3099d-fd11-4d05-ad1d-a5ea0d2c475f"],

Cell["We define query clauses for use in the sequel below.", \
"Text",ExpressionUUID->"663e5c3e-a0d8-4975-8c0a-b9b4a9629780"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataColumns", " ", "=", " ", "\"\<*\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataTable", " ", "=", " ", "\"\<Analysis\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "dataOrder", " ", "=", " ", 
   "\"\<Experiments.Experiment, FluorescenceByIndex.Temperature, \
Experiments.Index\>\""}], 
  ";"}]}], "Input",ExpressionUUID->"a73343b2-47a9-45c3-848c-ef4b07ab4539"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fitting Single Stranded Wells", \
"Subsection",ExpressionUUID->"d0169ea4-b63e-47e8-b99d-8c6121248e9d"],

Cell["\<\
We start by digging out the wells that have only one strand in them. We then \
fit a linear model to that data, on the assumption that for a solution with \
only one strand, Evagreen fluorescence will be linear in concentration, aka \
linear in moles of nucleotides.\
\>", "Text",ExpressionUUID->"df1d9f05-3f94-4a38-865b-8ac6dcd37cb3"],

Cell[CellGroupData[{

Cell["Fitting", \
"Subsubsection",ExpressionUUID->"b7e3a6df-640a-4e7b-a11f-be20f362e0ba"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "getColumnsExperimentTemp", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getColumnsExperimentTemp", "[", 
   RowBox[{"experiment_", ",", " ", "temp_", ",", " ", "columns_List"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "s", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"toString", "[", "#", "]"}], "&"}], "/@", " ", "columns"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"s", " ", "=", " ", 
      RowBox[{"StringRiffle", "[", 
       RowBox[{"s", ",", " ", "\"\<, \>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"getColumnsExperimentTemp", "[", 
      RowBox[{"experiment", ",", " ", "temp", ",", " ", "s"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getColumnsExperimentTemp", "[", 
   RowBox[{"experiment_", ",", " ", "temp_", ",", " ", "columns_String"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"raw", ",", " ", "query", ",", " ", "dataset"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"raw", " ", "=", " ", 
      RowBox[{
      "\"\<SELECT \>\"", " ", "<>", " ", "columns", " ", "<>", " ", 
       "\"\< FROM \>\"", " ", "<>", " ", "dataTable", " ", "<>", 
       "\"\< WHERE ([Experiment]='`1`' AND [Temperature]=`2`) ORDER BY \>\"", 
       " ", "<>", " ", "dataOrder"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"query", " ", "=", " ", 
      RowBox[{"formatString", "[", 
       RowBox[{"raw", " ", ",", " ", "experiment", ",", " ", "temp"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dataset", " ", "=", " ", 
      RowBox[{"makeDataset", "[", 
       RowBox[{"SQLExecute", "[", 
        RowBox[{"database", ",", " ", "query", ",", " ", 
         RowBox[{
         "\"\<ShowColumnHeadings\>\"", " ", "\[Rule]", " ", "True"}]}], "]"}],
        "]"}]}], ";", "\[IndentingNewLine]", "dataset"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"getColumnsExperimentTemp", "[", 
    RowBox[{"\"\<E20012701\>\"", ",", " ", "22", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<nmolSsNtA\>\"", ",", " ", "\"\<nmolSsNtB\>\"", ",", " ", 
       "\"\<nmolDsNt\>\"", ",", " ", "\"\<Value\>\"", ",", " ", 
       "\"\<StrandAConcentration\>\"", ",", " ", 
       "\"\<StrandBConcentration\>\""}], "}"}]}], "]"}], 
   "*)"}]}]}], "Input",ExpressionUUID->"ebaf77af-f3c5-4bc9-b140-7513ae5e161f"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "fitSsExperimentTemp", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitSsExperimentTemp", "[", 
   RowBox[{"experiment_", ",", " ", "temp_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "columns", ",", " ", "dataset", ",", " ", "ssDataset", ",", " ", "data", 
      ",", " ", "dataToFit", ",", " ", "anyDs", ",", " ", "vars", ",", " ", 
      "lm"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Fetch", " ", "all", " ", "the", " ", "data", " ", "for", " ", "the", 
      " ", "experiment", " ", "at", " ", "this", " ", "temp"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "columns", " ", "=", " ", 
      "\"\<nmolSsNtA, nmolSsNtB, Value, StrandAConcentration, \
StrandBConcentration\>\""}], ";", "\[IndentingNewLine]", 
     RowBox[{"dataset", " ", "=", " ", 
      RowBox[{"getColumnsExperimentTemp", "[", 
       RowBox[{"experiment", ",", " ", "temp", ",", " ", "columns"}], "]"}]}],
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Find", " ", "the", " ", "subset", " ", "in", " ", "which", " ", "we", 
       " ", "*", "know", "*", " ", "we", " ", "only", " ", "put", " ", "one", 
       " ", "strand"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ssDataset", " ", "=", " ", 
      RowBox[{"dataset", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", "\"\<StrandAConcentration\>\"", "]"}], 
           "\[Equal]", " ", "0"}], "  ", "||", " ", 
          RowBox[{
           RowBox[{"#", "[", "\"\<StrandBConcentration\>\"", "]"}], 
           "\[Equal]", " ", "0"}]}], " ", "&"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Fit", " ", "a", " ", "linear", " ", "model", " ", "to", " ", "that", 
       " ", "data"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"vars", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"nmolSsNtA", ",", " ", "nmolSsNtB"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dataToFit", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], "]"}], "]"}], 
        " ", "&"}], " ", "/@", " ", 
       RowBox[{"unDataset", "[", "ssDataset", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lm", " ", "=", " ", 
      RowBox[{"LinearModelFit", "[", 
       RowBox[{"dataToFit", ",", " ", "vars", ",", " ", "vars"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<lmSs\>\"", " ", "\[Rule]", " ", "lm"}], ",", " ", 
        RowBox[{"\"\<experiment\>\"", " ", "\[Rule]", " ", "experiment"}], 
        ",", " ", 
        RowBox[{"\"\<temp\>\"", " ", "\[Rule]", " ", "temp"}]}], "}"}], " ", "//",
       " ", "Association"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fitSs1", " ", "=", " ", 
  RowBox[{"fitSsExperimentTemp", "[", 
   RowBox[{"\"\<E20012701\>\"", ",", " ", "22"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fitSs2", " ", "=", " ", 
  RowBox[{"fitSsExperimentTemp", "[", 
   RowBox[{"\"\<E20020401\>\"", ",", " ", "22"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fitSs3", " ", "=", " ", 
  RowBox[{"fitSsExperimentTemp", "[", 
   RowBox[{"\"\<E20030501\>\"", ",", " ", "22"}], 
   "]"}]}]}], "Input",ExpressionUUID->"78847baf-90cb-4d65-9ff3-7336485f901e"],

Cell["\<\
We can do a similar thing for data we *know* ought to be double stranded\
\>", "Text",ExpressionUUID->"6143d9a0-9d0b-4e30-8e23-479702223295"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "fitDsExperimentTemp", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitDsExperimentTemp", "[", "fitSs_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "experiment", ",", " ", "temp", ",", " ", "columns", ",", " ", "dataset",
       ",", " ", "ssDataset", ",", " ", "data", ",", " ", "dataToFit", ",", 
      " ", "anyDs", ",", " ", "vars", ",", " ", "form", ",", " ", "lm", ",", 
      " ", "xySs", ",", " ", "xDs", ",", " ", "ssExplained", ",", " ", 
      "measured", ",", " ", "addValues"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"experiment", " ", "=", " ", 
      RowBox[{"fitSs", "[", "\"\<experiment\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"temp", " ", "=", " ", 
      RowBox[{"fitSs", "[", "\"\<temp\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Fetch", " ", "all", " ", "the", " ", "data", " ", "for", " ", "the", 
       " ", "experiment", " ", "at", " ", "this", " ", "temp"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
     "columns", " ", "=", " ", 
      "\"\<nmolSsNtA, nmolSsNtB, nmolDsNt, Value, StrandAConcentration, \
StrandBConcentration\>\""}], ";", "\[IndentingNewLine]", 
     RowBox[{"dataset", " ", "=", " ", 
      RowBox[{"getColumnsExperimentTemp", "[", 
       RowBox[{"experiment", ",", " ", "temp", ",", " ", "columns"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"data", " ", "=", " ", 
      RowBox[{"unDataset", "[", "dataset", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xySs", " ", "=", " ", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"measured", " ", "=", " ", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "4"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ssExplained", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"fitSs", "[", "\"\<lmSs\>\"", "]"}], " ", "@@", " ", "#"}], 
        " ", "&"}], "/@", " ", "xySs"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xDs", " ", "=", " ", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vars", " ", "=", " ", 
      RowBox[{"{", "nmolDsNt", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Min", "[", "xDs", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"Max", "[", "xDs", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"form", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dataToFit", " ", "=", 
         RowBox[{"Transpose", " ", "@", 
          RowBox[{"{", 
           RowBox[{"xDs", ",", " ", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", " ", 
              RowBox[{"Length", "[", "xDs", "]"}]}], "]"}]}], "}"}]}]}]}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"form", " ", "=", " ", "vars"}], ";", "\[IndentingNewLine]", 
        RowBox[{"dataToFit", " ", "=", 
         RowBox[{"Transpose", " ", "@", 
          RowBox[{"{", 
           RowBox[{"xDs", ",", " ", 
            RowBox[{"measured", " ", "-", " ", "ssExplained"}]}], 
           "}"}]}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"lm", " ", "=", " ", 
      RowBox[{"LinearModelFit", "[", 
       RowBox[{"dataToFit", ",", " ", "form", ",", " ", "vars"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<lmDs\>\"", " ", "\[Rule]", " ", "lm"}], ",", " ", 
        RowBox[{"\"\<lmSs\>\"", " ", "\[Rule]", " ", 
         RowBox[{"fitSs", "[", "\"\<lmSs\>\"", "]"}]}], ",", " ", 
        RowBox[{"\"\<experiment\>\"", " ", "\[Rule]", " ", "experiment"}], 
        ",", " ", 
        RowBox[{"\"\<temp\>\"", " ", "\[Rule]", " ", "temp"}]}], "}"}], " ", "//",
       " ", "Association"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fitDs1", " ", "=", " ", 
  RowBox[{
  "fitDsExperimentTemp", "[", "fitSs1", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fitDs2", " ", "=", " ", 
  RowBox[{
  "fitDsExperimentTemp", "[", "fitSs2", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fitDs3", " ", "=", " ", 
  RowBox[{
  "fitDsExperimentTemp", "[", "fitSs3", 
   "]"}]}]}], "Input",ExpressionUUID->"728fc376-b279-4142-a3e5-90c7eef87810"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting", \
"Subsubsection",ExpressionUUID->"e15ee605-b98d-422e-a55e-e16dd3073c9f"],

Cell["We plot that data to get a sense of how well the fit works.", \
"Text",ExpressionUUID->"8ccddb42-c9f1-4c7b-abe0-b277f6bb0882"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "plotFittedSs", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotFittedSs", "[", "fit_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lm", ",", " ", "lmDs", ",", " ", "title", ",", " ", "data", ",", " ", 
       "dataDs", ",", " ", "ssA", ",", " ", "ssB", ",", " ", "fnA", ",", " ", 
       "fnB", ",", " ", "fnDs", ",", " ", "plot", ",", " ", "plots"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lm", " ", "=", " ", 
       RowBox[{"fit", "[", "\"\<lmSs\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lmDs", " ", "=", 
       RowBox[{"fit", "[", "\"\<lmDs\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"title", " ", "=", " ", 
       RowBox[{"formatString", "[", 
        RowBox[{"\"\<``@``C\>\"", ",", " ", 
         RowBox[{"fit", "[", "\"\<experiment\>\"", "]"}], ",", " ", 
         RowBox[{"fit", "[", "\"\<temp\>\"", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"lm", "[", "\"\<Data\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dataDs", " ", "=", " ", 
       RowBox[{"lmDs", "[", "\"\<Data\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ssA", " ", "=", " ", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"data", ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", "0"}], 
           "&"}]}], "]"}], " ", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ssB", " ", "=", " ", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"data", ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "0"}], 
           "&"}]}], "]"}], " ", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fnA", "[", "x_", "]"}], " ", ":=", " ", 
       RowBox[{"lm", "[", 
        RowBox[{"x", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fnB", "[", "x_", "]"}], " ", ":=", " ", 
       RowBox[{"lm", "[", 
        RowBox[{"0", ",", " ", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fnDs", "[", "x_", "]"}], " ", ":=", " ", 
       RowBox[{"lmDs", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"plot", "[", 
        RowBox[{"d_", ",", " ", "f_", ",", " ", "t_"}], "]"}], " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Show", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{"d", ",", " ", 
             RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<nmol nt\>\"", ",", " ", "\"\<RFU\>\""}], "}"}]}], 
             ",", " ", 
             RowBox[{"PlotLabel", "\[Rule]", " ", "t"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", " ", 
               RowBox[{"Min", "[", 
                RowBox[{"d", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Max", "[", 
                RowBox[{"d", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
            "]"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plots", " ", "=", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"plot", "[", 
          RowBox[{"ssA", ",", " ", "fnA", ",", " ", 
           RowBox[{"formatString", "[", 
            RowBox[{
            "\"\<``: RFU vs Ss (Strand A Only)\>\"", ",", " ", "title"}], 
            "]"}]}], "]"}], ",", " ", "\"\< \>\"", ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"plot", "[", 
          RowBox[{"ssB", ",", " ", "fnB", ",", " ", 
           RowBox[{"formatString", "[", 
            RowBox[{
            "\"\<``: RFU vs Ss (Strand B Only)\>\"", ",", " ", "title"}], 
            "]"}]}], "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", " ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"dataDs", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], " ", "<", " ", 
         RowBox[{"Max", "[", 
          RowBox[{"dataDs", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"plots", " ", "=", " ", 
         RowBox[{"plots", " ", "~", "Join", "~", " ", 
          RowBox[{"{", 
           RowBox[{"\"\< \>\"", ",", " ", 
            RowBox[{"plot", "[", 
             RowBox[{"dataDs", ",", " ", "fnDs", ",", " ", 
              RowBox[{"formatString", "[", 
               RowBox[{
               "\"\<``: Non-Ss RFU vs Complementary Ds\>\"", ",", " ", 
                "title"}], "]"}]}], "]"}]}], "}"}]}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Row", " ", "@", " ", "plots"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotFittedSs", "[", "fitDs1", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotFittedSs", "[", "fitDs2", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"plotFittedSs", "[", "fitDs3", 
  "]"}]}], "Input",ExpressionUUID->"01dcc6eb-379f-4f7e-a951-34c1a77d113e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Explaining", \
"Subsubsection",ExpressionUUID->"64e8f4de-62f3-4cfe-aef4-65ba40a9f35c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "explain", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"explain", "[", "fitIn_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fit", ",", " ", "addValues", ",", " ", "lmSs", ",", " ", "lmDs", ",", 
      " ", "title", ",", " ", "columns", ",", " ", "dataset", ",", "  ", 
      "data", ",", " ", "explained", ",", " ", "measured", ",", " ", "xy", 
      ",", " ", "xyzMeasured", ",", " ", "unexplained", ",", " ", 
      "xyzUnexplained", ",", " ", "view"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fit", " ", "=", " ", "fitIn"}], ";", "\[IndentingNewLine]", 
     RowBox[{"lmSs", " ", "=", " ", 
      RowBox[{"fit", "[", "\"\<lmSs\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lmDs", " ", "=", " ", 
      RowBox[{"fit", "[", "\"\<lmDs\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"title", " ", "=", " ", 
      RowBox[{"formatString", "[", 
       RowBox[{"\"\<``@``C\>\"", ",", " ", 
        RowBox[{"fit", "[", "\"\<experiment\>\"", "]"}], ",", " ", 
        RowBox[{"fit", "[", "\"\<temp\>\"", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"columns", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<nmolNtA\>\"", ",", " ", "\"\<nmolNtB\>\"", ",", " ", 
        "\"\<nmolSsNtA\>\"", ",", " ", "\"\<nmolSsNtB\>\"", ",", " ", 
        "\"\<nmolDsNt\>\"", ",", "\"\<Value\>\""}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dataset", " ", "=", " ", 
      RowBox[{"getColumnsExperimentTemp", "[", 
       RowBox[{
        RowBox[{"fit", "[", "\"\<experiment\>\"", "]"}], ",", " ", 
        RowBox[{"fit", "[", "\"\<temp\>\"", "]"}], ",", " ", "columns"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", " ", "=", " ", 
      RowBox[{"unDataset", "[", "dataset", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"explained", " ", "=", " ", 
      RowBox[{"unDataset", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"row", ",", " ", 
          RowBox[{
           RowBox[{"lmSs", "[", 
            RowBox[{
             RowBox[{"row", "[", "\"\<nmolSsNtA\>\"", "]"}], ",", " ", 
             RowBox[{"row", "[", "\"\<nmolSsNtB\>\"", "]"}]}], "]"}], " ", 
           "+", " ", 
           RowBox[{"lmDs", "[", 
            RowBox[{"row", "[", "\"\<nmolDsNt\>\"", "]"}], "]"}]}]}], "]"}], 
        " ", "/@", " ", "dataset"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"measured", "=", " ", 
      RowBox[{"unDataset", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"row", ",", " ", 
          RowBox[{"row", "[", "\"\<Value\>\"", "]"}]}], "]"}], " ", "/@", " ",
         "dataset"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xy", "=", " ", 
      RowBox[{"unDataset", "[", 
       RowBox[{"dataset", "[", 
        RowBox[{"All", ",", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<nmolNtA\>\"", ",", " ", "\"\<nmolNtB\>\""}], "}"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"addValues", "[", 
       RowBox[{"tuples_", ",", " ", "scalars_"}], "]"}], " ", ":=", " ", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", " ", "~", "Join", "~", 
          RowBox[{"{", "#2", "}"}]}], "&"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"tuples", ",", " ", "scalars"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xyzMeasured", " ", "=", " ", 
      RowBox[{"addValues", "[", 
       RowBox[{"xy", ",", " ", "measured"}], " ", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"unexplained", " ", "=", "  ", 
      RowBox[{"measured", " ", "-", " ", "explained"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xyzUnexplained", " ", "=", " ", 
      RowBox[{"addValues", "[", 
       RowBox[{"xy", ",", "unexplained"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"view", " ", "=", " ", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListPointPlot3D", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xyzMeasured", ",", " ", "xyzUnexplained"}], "}"}], ",", 
          " ", "\[IndentingNewLine]", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"formatString", "[", 
            RowBox[{
            "\"\<``: Measured (Blue) & Unexplained (Red)\>\"", ",", " ", 
             "title"}], "]"}]}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", " ", "Red"}], "}"}]}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "1000"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Filling", "->", "Axis"}], ",", 
          RowBox[{"FillingStyle", "\[Rule]", "Automatic"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<nmolNtA\>\"", ",", " ", "\"\<nmolNtB\>\"", ",", " ", 
             "\"\<RFU\>\""}], " ", "}"}]}]}], "\[IndentingNewLine]", "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Plot3D", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", 
            RowBox[{"Min", "[", 
             RowBox[{"xy", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", " ", 
            RowBox[{"Max", "[", 
             RowBox[{"xy", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"y", ",", " ", 
            RowBox[{"Min", "[", 
             RowBox[{"xy", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", " ", 
            RowBox[{"Max", "[", 
             RowBox[{"xy", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
          " ", "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", "0.05", "]"}], ",", " ", "Green"}], 
            "}"}]}], ",", " ", 
          RowBox[{"Mesh", "\[Rule]", "6"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cellPrint", " ", "@", " ", "view"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fit", "[", "\"\<xyzUnexplained\>\"", "]"}], " ", "=", " ", 
      "xyzUnexplained"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fit", "[", "\"\<unexplained\>\"", "]"}], " ", "=", "  ", 
      "unexplained"}], ";", "\[IndentingNewLine]", "fit"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitDs1", " ", "=", " ", 
   RowBox[{"explain", "[", "fitDs1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitDs2", " ", "=", " ", 
   RowBox[{"explain", "[", "fitDs2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitDs3", " ", "=", " ", 
   RowBox[{"explain", "[", "fitDs3", "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"a16ab2a2-8824-4196-b9bf-550aeb26682a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Old", "Section",ExpressionUUID->"fd6dc9f3-17cd-4631-93ae-94bda3be1d60"],

Cell[CellGroupData[{

Cell["Thoughts", \
"Subsection",ExpressionUUID->"603b21c3-d591-4fdb-96d0-61e75e9d6516"],

Cell["\<\
* How do we account for the fact that our eva molecules are beging eaten up \
as they bind, thus reducing background fluoresence.\
\>", "Text",ExpressionUUID->"4d37d500-1ade-4beb-9558-f13300441229"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Misc", "Section",ExpressionUUID->"77386c64-cbe1-49a7-bdbf-c47696c08719"],

Cell["\<\
https://stackoverflow.com/questions/29855062/setting-parameter-values-in-sql-\
for-ms-access\
\>", "Text",ExpressionUUID->"aa3a8019-a87d-47f5-a6bc-033900d84f92"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1294, 1541},
WindowMargins->{{Automatic, 1219}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
CellContext->Notebook,
CellLabelAutoDelete->True,
TrackCellChangeTimes->False,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Report"}, "StandardReport.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Graphics"], MenuSortingValue -> 10000, Background -> None], 
   Cell[
    StyleData[All, "Printout"], Magnification -> 0.5]}, Visible -> False, 
  FrontEndVersion -> "12.0 for Microsoft Windows (64-bit) (April 8, 2019)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]

